diff -ru CSSC-1.4.1.orig/configure CSSC-1.4.1/configure
--- CSSC-1.4.1.orig/configure	2019-05-07 13:44:57.000000000 +0200
+++ CSSC-1.4.1/configure	2021-04-08 14:11:56.935465623 +0200
@@ -19418,60 +19418,6 @@
 ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
 
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if you are using a broken version of glibc with a version of GCC (>=2.97) that doesn't like it" >&5
-$as_echo_n "checking if you are using a broken version of glibc with a version of GCC (>=2.97) that doesn't like it... " >&6; }
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-#include <stdio.h>
-int x = 0;
-class foo {
-public:
-foo() { }
-void some_member_function(void) { };
-int printf(const char *fmt, ...);
-};
-
-int
-main ()
-{
-/* no function body*/
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_cxx_try_compile "$LINENO"; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-
-oldCFLAGS="$CFLAGS"
-oldCXXFLAGS="$CXXFLAGS"
-if echo "$CFLAGS" | grep -e "-O" >/dev/null
-then
-	CFLAGS="-g"
-	CXXFLAGS="-g"
-
-echo
-echo WARNING It seems that you are using a version of GNU lilbc
-echo WARNING that has a broken printf macro in /usr/include/bits/stdio.h.
-echo WARNING I have changed CFLAGS and CXXFLAGS to turn optimisation off
-echo WARNING in order to work around the problem.
-echo WARNING
-echo WARNING Other possible workarounds would be to use GCC 2.96 or
-echo WARNING earlier, or a version of glibc which does not have this
-echo WARNING bug.
-echo WARNING
-echo WARNING CFLAGS   has been changed from "$oldCFLAGS"   to "$CFLAGS"
-echo WARNING CXXFLAGS has been changed from "$oldCXXFLAGS" to "$CXXFLAGS"
-echo
-
-fi
-
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 
 ac_ext=c
 ac_cpp='$CPP $CPPFLAGS'
